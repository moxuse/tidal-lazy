setcps (102/120)

do
  x <- lazy' 1 $ inst2
  d1
    $ degradeBy 0.85
    $ msvoC 0.125
    $ x
    |+ slowPanR 3
    |+ slowSpeedR 3
    |+ room 0.02
    |+ shape 0.2
    |+ n "1 ~ 37? 10"
    |+ wah "[0.03, 0.02, 0.01]"
    |+ room 0.0125


d2 $ slow 32 $ s "sync"


do
  let pat ="{0 1 0  ~  ~ 1 0 1 0  ~ 0}%8"
  let pat2 ="{1 0 ~ 1 1 1 ~ 0 ~ 1 0 0}%6"
  let x = gain pat
  let y = gain (inverse <$> pat)
  let z = gain pat2
  d1
    $ iter (wchoose [(1,9)])
    $ sometimesBy 0.25 (|+ squiz "{1 2 4 0 2 0 0 2}%5")
    $ every 4 (within (0,0.25) (|+ binshf 0.5)) .(rev)
    $ whenmod 4 2 (within (0.5,0.9) (|+ mDefault))
    $ within (0.35, 0.9) (msvoB 0)
    $ stack [
      x # s "mhh:0" |+ slowSpeedR 4
      , y # s "mbd:9"
      , z # s "mst:4"  |+ slowSpeedR 3
      , x # s "msn2:15?"
      , fast 2 $ s "mcp:1?" |+ convn 0.3
      , degradeBy 0.92 y # s "ml4:5?"  |+ slowSpeedR 3 |+ gain 0.05 |+ hpf 2200 |+ coarse 8
    ] 
    |+ slowPanS 3 
    |+ mGain

hush
