setcps (124/120)

d1
$ slow 2
$ slow "<2 1 2 1 0.75>"
$ whenmod 4 2 (within (0.2, 0.8) (|+| mfDel (slow 1.5 (range 0.1 1 $ sine))))
$ stack [
  sound "{msn:12/4 [mpd2:25/6 mpd:19/2] mcp:1/7, ~ mhh:29(3,8)}" 
    |+| end (slow 2.4 $ "0.5 1 1 0.5")
  ,sound (slow 3 $ "{ml:28/2 msn:2/4 mbd:25*2/3 mhh:4}")
]
|+| sustain "1.5"
|+| binshfS 2
|+| slowPanR 4
|+| shape "0.3"
# mGain

d2
$ slow 4
$ whenmod 2 1 (|*| speed "0.75")
$ whenmod 3 2 (|*| speed "1.125")
$ every 4 (|*| speed "0.75")
$ sound "msoz:14 mpd:23/2"
|+| speed "0.9"
|+| n (slow 2 "0 1")
|+| begin "0.12"
|+| end "0.9"
|+| room "0.02"
|+| shape "0.1"
|+| cutoff (slow 1.75 (range 700 5000 $ sine))
|+| mfDel (slow 1.25 (range 0.1 1 $ sine))

do
  let pat = "[~ 0 ~ 1/6 1 ~ 1 1/8]"
  -- let pat = "[1/3 ~ 0*2 1/5 1*2 0/8 1 0/4]"
  -- let pat = "[1 0*2 1/4 1/8 0 1/2 1 0/12]"
  d3
   $ slow 2
   $ every 2 (within (0.125,  0.75) (slow "2"))
   $ stack[
    (whenmod 4 3 (0.125 <~) $ gain pat |+| sound (choose ["mhh:2", "msn:16"]) |+| speed "0.8 1.8")
    ,(gain pat |+| sound "mbd:9")
    ,((0.125 ~>) $ whenmod 4 2 (within (0.2, 1.0) (|+| mfDel (slow 1.25 (scale 0.1 1 $ sine1)))) 
      $ gain (slow 2 $ pat) 
      |+| sound "mb:16" 
      |+| speed "0.5 0.6666 1 0.75") 
      |+| sustain "0.2"
    ,(whenmod 4 2 (|*| n "<0.75 1.333>") 
      $ slow 6
      $ gain (inverse <$> pat) |+| sound "superfork" 
      |+| n "1.125 1 0.75 0.8" 
      |+| sustain "1.0 2.125 1.6666 0.5" 
      |+| wah "0.08"
      |+| coarse "<16 2 4 2>"
      )
      ]
      |+| room "0"
      |+| mGain
      |+| slowPanR 2
      |+| binshf "0.3 0 0 0 0.5 0"



d1 silence

d2 silence

d3 silence

hush
