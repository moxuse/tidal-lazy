(cps 1.18)

d1
  $ slow 3 
  $ every 6 (off 0.125 (|+| speed "1 2 1 0.75")) 
  $ s "feelfx*2 alex*2" 
    |+| n "2 7 1" 
    # speed "-0.25" 
    |+| cut "6 5 6 7" 
    |-| speed (slow 2 $ "0.1 0.2") 
    |+| wah "0.05" 

do
  let 
    pad1 = sound "{msoz:2*2, msoz:10*2}"
    pad2 = sound "{msoz:17*2}" -- 17 15 14 18
  d2
    $ slow 16
    $ stut 8 0.25 16
    $ slowcat [pad1, pad2, pad2]
    |+| speed "0.5 [0.3333 [0.66 0.5]]*3 -0.333"
    |+| wah "0.05"
    |+| gain "0.8"

d3
  $ every 2 (off 0.125 (|+| speed "0.5 -2 4 2")) 
  $ every 6 (within (0.3, 0.8) (striateL' 3 0.08 11)) 
  $ every 3 (within (0.1, 0.6) (|+| speed (choose [0.5, -1, 4, 0.75, -0.35])))
-- $ every 4 (within (0.0, 0.6) (|+| disv "-3 -4" "3 3"))
  $ slow 3
  $ stack[
    (sound "mbd:4 [mhh:12([3,4]/2,8) ~] ~"),
    (sound "{mhh:22([2 3]/2,5) ~ msn:7/2, [~ moe3([3 2]/2,5)] mbd:5 ~}" |+| n "2"),
    (sound "mnt:18/2 [~ msn:24] ~")
    -- (sound "mnt:18/2 [~ msn:24*2 ~] ~")
  ]
    |+| binshfS 2 
    |+| gain "1.2"
--     |+| shape "0.3"
   -- |+| n "2"
   |+| n (scale (-1) 6 $ (run 3))
    |+| slowPanR 2 


d1 silence

d2 silence

d3 silence

hush
